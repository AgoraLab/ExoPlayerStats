apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.getSrcDirs()
    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

publishing {
    publications {

        maven(MavenPublication) {

            groupId 'io.github.agoralab'
            artifactId 'ExoPlayerStats'
            version libReleaseVersion
            afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) }
            artifact androidSourcesJar
            pom {

                name = 'ExoPlayerStats'
                description = 'ExoPlayer performance statistics library'
                url = 'https://github.com/AgoraLab/ExoplayerStats'

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name = 'Agora_cdn'
                        email = 'cdn@agora.io'
                    }
                }

                scm {
                    url = 'https://github.com/AgoraLab/ExoplayerStats'
                    connection = 'scm:git:github.com/AgoraLab/ExoplayerStats.git'
                    developerConnection = 'scm:git:ssh://git@github.com/AgoraLab/ExoplayerStats.git'
                }
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {

                    if (it.group != null && (it.name != null && "unspecified" != it.name) && it.version != null) {
                        println "dependency=${it.toString()}"
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                        dependencyNode.appendNode('scope', 'implementation')
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = libReleaseVersion.endsWith('-SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username sonatypeUsername
                password sonaTypePassword
            }
        }
    }
}

signing {
    sign publishing.publications
}